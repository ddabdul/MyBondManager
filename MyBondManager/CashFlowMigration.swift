// CashFlowMigration.swift
// MyBondManager
// One-off migration to seed existing bonds with persisted cash-flow events
// Generated by ChatGPT on 28/04/2025.

import Foundation
import CoreData

/// Runs a one-time migration: generates CashFlowEntity rows for all existing BondEntity objects.
/// After successful run, marks completion in UserDefaults to avoid rerunning.
struct CashFlowMigration {
    private static let migrationKey = "CashFlowMigrationPerformed"

    /// Entry point: call this at app launch before user data is needed.
    static func performIfNeeded() {
        let defaults = UserDefaults.standard
        guard !defaults.bool(forKey: migrationKey) else {
            return
        }

        let persistence = PersistenceController.shared
        let context = persistence.backgroundContext
        context.performAndWait {
            let request: NSFetchRequest<BondEntity> = BondEntity.fetchRequest()
            do {
                let bonds = try context.fetch(request)
                let generator = CashFlowGenerator(context: context)
                for bond in bonds {
                    try generator.regenerateCashFlows(for: bond)
                }
                if context.hasChanges {
                    try context.save()
                }
                defaults.set(true, forKey: migrationKey)
                print("CashFlowMigration: seeded cash flows for \(bonds.count) bonds.")
            } catch {
                print("CashFlowMigration error: \(error)")
            }
        }
    }
}

// MARK: - Adjustments to use correct nature property

// NOTE: Ensure CashFlowGenerator and CashFlowMigration use the 'nature' attribute
// as defined in your data model (not 'natureRaw').
// For example, within regenerateCashFlows(for:) use:
//     cf.nature = CashFlowEntity.Nature.interest.rawValue
// instead of setting cf.natureRaw directly.
